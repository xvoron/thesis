%% dataesemble_process
% Description:
% 	Processing esemble dataset add labels
% Content:
%	
%
% Author: Artyom Voronin
% Brno, 2021
clc; clear all; close all;

disp("Starting")
addpath('../utils/');
addpath('../utils/preprocessing/');

path2data_converted = '../data/data11/*.mat';
loc_files = fullfile(path2data_converted);
ext_files = ".mat";

% Create and configure Ensemble datastore
datastore = fileEnsembleDatastore(loc_files, ext_files);

datastore.ReadFcn = @readData;

datastore.DataVariables = ["FlowExtrusion"; ...  
                           "FlowExtrusion_stats"; ...  
                           "FlowContraction"; ...
                           "AirPressure"; ...
                           "AccelerometerMoving_axisY"; ...
                           "AccelerometerMoving_axisZ"; ...
                           "AccelerometerStatic_axisY"; ...
                           "AccelerometerStatic_axisZ"; ...                         
                           "StrainGauge"; ...
                           "ProximitySensor_bottom"; ... 
                           "ProximitySensor_upper"; ...
                           "LeverPosition"; ... 
                           "MIC_uBumper"; ... 
                           "MIC_bBumper"; ...
                           "MIC_Ambient"; ... 
                           "outValveHP"; ... 
                           "outValveWP";...
                           ];

datastore.ConditionVariables = ["FaultCode"; ...
                                "ThrottleValve1"; ...
                                "ThrottleValve2"; ...
                                "SmallDamper_upper"; ...
                                "LargeDamper_upper"; ...
                                "SmallDamper_bottom"; ...
                                "LargeDamper_bottom";
                                "Settings.Load"];

datastore.IndependentVariables = ["Temp_Cylinder"; ...
                                  "Temp_Ambient"; ...
                                  ];

datastore.SelectedVariables = ["FaultCode"; ...
                               "FlowExtrusion"; ... 
                               "FlowExtrusion_stats"; ... 
                               "FlowContraction"; ...
                               "AirPressure"; ...
                               "AccelerometerMoving_axisY"; ...
                               "AccelerometerMoving_axisZ"; ...
                               "AccelerometerStatic_axisY"; ...
                               "AccelerometerStatic_axisZ"; ...                         
                               "StrainGauge"; ...
                               "ProximitySensor_bottom"; ... 
                               "ProximitySensor_upper"; ...
                               "LeverPosition"; ...                               
                               "MIC_uBumper"; ... 
                               "MIC_bBumper"; ...
                               "MIC_Ambient"; ... 
                               "outValveHP"; ... 
                               "outValveWP"];


datastore.WriteToMemberFcn = @writeData;
clear loc_files ext_files path2data_converted
disp("Datastore import - done");

%% 3. Preprocess Data
label_add = true;
runParallel = false;

datastore.ConditionVariables = [datastore.ConditionVariables; "Label"];

if label_add
    tic
    reset(datastore);
    if runParallel
        n = numpartitions(datastore, gcp);
        parfor ct = 1:n
            subdatastore = partition(datastore, n, ct);
            while hasdata(subdatastore)
                member = read(subdatastore);
                add_data = faultCode2Label(member);
                writeToLastMemberRead(subdatastore, "Label", add_data);
            end
        end
    else          
        while hasdata(datastore)
            member = read(datastore);
            add_data = faultCode2Label(member);
            writeToLastMemberRead(datastore, "Label", add_data);
            disp(string(progress(datastore)*100) + "% Done");
        end
    end
    disp("Preprocessing - done");
    toc
else
    disp("Signals have been preprocessed before"); 
end
